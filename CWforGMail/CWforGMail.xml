<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs title="ChatWork for GMail" scrolling="true">
    <Require feature="settitle"/>
    <Require feature="setprefs"/>
    <Require feature="dynamic-height"/>
    <Locale messages="https://raw.githubusercontent.com/cw-masaki/gadgets/master/CWforGMail/lang/ALL_ALL.xml"/> 
    <Locale lang="ja" messages="https://raw.githubusercontent.com/cw-masaki/gadgets/master/CWforGMail/lang/ja_ALL.xml"/> 
  </ModulePrefs>
  <Content type="html" view="default"><![CDATA[
    <!DOCTYPE html>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
    <script>
      var prefs = new gadgets.Prefs();
      var version = '0.13b';
      
      //---- Provider specific settings ----------------------------------
      
      var service_domain = 'www.chatwork.com';
      var service_title = 'ChatWork';
      var company_name = 'ChatWork';
      var company_url = prefs.getMsg('chatwork_company_url');
      
      //---- Settings here -----------------------------------------------
      
      var refresh_interval = 60000; //1分で更新
      
      //---- Core code ---------------------------------------------------
      jQuery.noConflict();
      (function($){
        var apikey = prefs.getString('token');
        var first_success = false; //API通信に成功したか
        
        $(function(){
          //APIキーがすでに設定済みか
          if (apikey.length == 0){
            $('#token_setting').show();
            $('#settings').hide();
            gadgets.window.adjustHeight();
          }else{
            $('#settings').show();
            gadgets.window.adjustHeight();
            refreshData();
          }
          
          $('#version').text(version);
          $('#copyright').html('<a href="' + company_url + '" target="_blank">' + company_name + '</a>');
          
          $('#settings').click(function(){
            $('#token_setting').show();
            $('#settings').hide();
            gadgets.window.adjustHeight();
          });
          
          $('#cancel_setting').click(function(){
            if (apikey.length == 0){
              $('#token').val('');
            }else{
              $('#token_setting').hide();
              $('#settings').show();
              gadgets.window.adjustHeight();
            }
          });
          
          //APIキーを設定
          $('#submit_setting').click(function(){
            apikey = $('#token').val();
            $('#token').val('');
            
            if (apikey.length > 0){
              prefs.set('token',apikey);
              $('#token_setting').hide();
              $('#settings').show();
              $('#content').show();
              
              first_success = false;
              refreshData();
            }
          });
          
          //定期的にデータを更新
          var timer = setInterval(function(){
            if (first_success){
              refreshData();
            }
          },refresh_interval);
          
          setInterval(function(){
            gadgets.window.adjustHeight();
          },1000);
        });
        
        //チャット一覧を更新
        function updateRoomList(){
          var params = {};
          params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
          params[gadgets.io.RequestParameters.HEADERS] = {
            'X-ChatWorkToken': apikey
          };
          
          apiRequest("https://api.chatwork.com/v1/rooms",function(response){
            var dat = response.data;
            var list = '';
            
            for (var i = 0,list_len = dat.length;i < list_len;i++){
              var room = dat[i];
              var unread_stat = '';
              if (room.mention_num > 0){
                unread_stat = '<span class="unreadBadge">' + room.unread_num + '(' + room.mention_num + ')' + '</span>';
              }else if (room.unread_num > 0){
                unread_stat = '<span class="unreadBadge">' + room.unread_num + '</span>';
              }
              
              //未読の場合だけリスト表示
              if (room.unread_num > 0){
                list += '<li>'
                   + unread_stat
                   + '<img src="' + room.icon_path + '" class="roomIcon" />'
                   + '<a href="https://' + service_domain + '/#!rid' + room.room_id + '" target="_blank">'
                   + escapeHTML(room.name) + '</a></li>';
              }
            }
            
            if (list === ''){
              list = '<li>未読のチャットはありません</li>';
            }
            
            $('#roomlist').html(list);
            gadgets.window.adjustHeight();
          },function(response){
            //エラー時は非表示に
            $('#roomlist').empty();
          },params,0);
        }
        
        //未読数を更新
        function updateStatus(){
          var params = {};
          params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
          params[gadgets.io.RequestParameters.HEADERS] = {
            'X-ChatWorkToken': apikey
          };
          
          apiRequest("https://api.chatwork.com/v1/my/status",function(response){
            var dat = response.data;
            var unread_stat = '';
            if (dat.unread_room_num){
              unread_stat = '[' + dat.unread_room_num;
              
              if (dat.mention_room_num){
                unread_stat += '(' + dat.mention_room_num + ')';
              }
              
              unread_stat += '] ';
            }
            gadgets.window.setTitle(unread_stat + service_title);
          }, function(response){
            gadgets.window.setTitle(service_title);
          },params,0);
        }
        
        //未読数、チャット一覧を更新
        function refreshData(){
          updateRoomList();
          updateStatus();
        }
        
        //APIリクエスト
        var error_timer = null;
        function apiRequest(url, callback, error_callback, params, refreshInterval){
          if (apikey.length !== 0){
            makeCachedRequest(url, function(response){
              if (response.errors.length > 0){
                var err = $.parseJSON(response.text);
                $('#error').text(err.errors.join("\n")).show();
                gadgets.window.adjustHeight();
                if (error_timer){
                  clearTimeout(error_timer);
                }
                error_timer = setTimeout(function(){
                  $('#error').fadeOut();
                },10000);
                error_callback(response);
              }else{
                first_success = true;
                callback(response);
              }
            }, params, refreshInterval);
          }
        }
        
        //キャッシュ制御機能付きリクエスト
        function makeCachedRequest(url, callback, params, refreshInterval) {
          var ts = new Date().getTime();
          var sep = "?";
          if (refreshInterval && refreshInterval > 0) {
            ts = Math.floor(ts / (refreshInterval * 1000));
          }
          if (url.indexOf("?") > -1) {
            sep = "&";
          }
          url = [ url, sep, "nocache=", ts ].join("");
          gadgets.io.makeRequest(url, callback, params);
        }
        
        function escapeHTML(val){
          return $('<div />').text(val).html();
        }
      })(jQuery);
    </script>
    <style type="text/css">
    .container {
      color: #333;
      font-size: 12px;
      font-family: 'ヒラギノ角ゴ Pro W3', 'Hiragino Kaku Gothic Pro', 'メイリオ', Meiryo, 'ＭＳ Ｐゴシック', sans-serif;
      height: 100%;
      overflow: hidden;
      border-radius: 4px;
      background-color: aliceblue;
      border: 1px solid #ddd;
      padding: 3px;
    }
    
    ul {
      list-style-type: none;
      padding-left: 5px;
      margin: 3px 0px 0px -3px;
    }
    
    li {
      border-bottom: 1px solid #999;
      padding: 5px 0px;
    }
    
    li:first-child {
      border-top: 1px solid #999;
    }
    
    a {
      color: #333;
      text-decoration: none;
    }
    
    a:hover {
      text-decoration: underline;
    }
    
    fieldset {
      border: 1px solid #777;
      margin-bottom: 5px;
      padding: 3px;
    }
    
    .tokenInput {
      width: 110px;
      font-size: 10px;
      padding: 6px;
      border-radius: 6px;
      border: 1px solid #aaa;
      margin-bottom: 3px;
    }
    
    .roomIcon {
      width: 15px;
      height: 15px;
      padding: 0px 2px 0px 0px;
    }
    
    .unreadBadge {
      border-radius: 9px;
      background-color: #0a8abd;
      border: 1px solid #ddd;
      padding: 0 7px;
      color: #fff;
      font-weight: bold;
    }
    
    .errorMessage {
      background-color: #f2dede;
      padding: 5px;
    }
    
    .settingArea {
      text-align: right;
      font-size: 10px;
    }
    
    .settingLink {
      cursor: pointer;
      padding: 2px;
    }
    
    .footerArea {
      text-align: right;
      font-size: 10px;
      margin-top: 5px;
    }
    
    .copyright {
      float: left;
      width: 70px;
      text-align: left;
      padding: 0px 0px 0px 3px;
    }
    
    .version {
      float: right;
      width: 50px;
      padding: 0px 3px 0px 0px;
    }
    
    /* For modern browsers */
    .cf:before,
    .cf:after {
        content:"";
        display:block;
        overflow:hidden;
    }
     
    .cf:after {
        clear:both;
    }
     
    /* For IE 6/7 (trigger hasLayout) */
    .cf {
        zoom:1;
    }
    </style>
    <div class="container">
     <fieldset id="token_setting" style="display:none">
      <legend>API Token <a href="http://developer.chatwork.com/ja/" target="_blank">(?)</a></legend>
      <input type="text" id="token" class="tokenInput" />
      <input type="button" id="submit_setting" value="__MSG_save__" />
      <input type="button" id="cancel_setting" value="__MSG_cancel__" />
     </fieldset>
     <div id="error" class="errorMessage" style="display:none"></div>
     <div id="content">
      <div class="settingArea"><a id="settings" class="settingLink">__MSG_settings__</a></div>
      <ul id="roomlist"></ul>
      <div class="footerArea cf">
        <div class="copyright">&copy; <span id="copyright"></span></div>
        <div class="version">v<span id="version"></span></div></div>
     </div>
    </div>
  ]]></Content>
</Module>